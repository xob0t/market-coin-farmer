// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

export class Account {
    "name": string;
    "cookies": string;
    "proxy": string;
    "tokenSk": string;
    "login": string;
    "coinBalance": string;
    "rewardsJson": string;
    "signInInfoJson": string;

    /** Creates a new Account instance. */
    constructor($$source: Partial<Account> = {}) {
        if (!("name" in $$source)) {
            this["name"] = "";
        }
        if (!("cookies" in $$source)) {
            this["cookies"] = "";
        }
        if (!("proxy" in $$source)) {
            this["proxy"] = "";
        }
        if (!("tokenSk" in $$source)) {
            this["tokenSk"] = "";
        }
        if (!("login" in $$source)) {
            this["login"] = "";
        }
        if (!("coinBalance" in $$source)) {
            this["coinBalance"] = "";
        }
        if (!("rewardsJson" in $$source)) {
            this["rewardsJson"] = "";
        }
        if (!("signInInfoJson" in $$source)) {
            this["signInInfoJson"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Account instance from a string or object.
     */
    static createFrom($$source: any = {}): Account {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Account($$parsedSource as Partial<Account>);
    }
}

export class GlobalSettings {
    "accounts": Account[];

    /** Creates a new GlobalSettings instance. */
    constructor($$source: Partial<GlobalSettings> = {}) {
        if (!("accounts" in $$source)) {
            this["accounts"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new GlobalSettings instance from a string or object.
     */
    static createFrom($$source: any = {}): GlobalSettings {
        const $$createField0_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("accounts" in $$parsedSource) {
            $$parsedSource["accounts"] = $$createField0_0($$parsedSource["accounts"]);
        }
        return new GlobalSettings($$parsedSource as Partial<GlobalSettings>);
    }
}

// Private type creation functions
const $$createType0 = Account.createFrom;
const $$createType1 = $Create.Array($$createType0);
